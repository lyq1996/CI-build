language: c
dist: focal

os:
  - linux

#branches: 
#  only:
#    - master

before_install:
  - sudo apt update
  - sudo apt -y install bc bison ca-certificates ccache clang cmake curl file flex gcc g++ git libelf-dev libssl-dev make ninja-build python3 texinfo u-boot-tools xz-utils zlib1g-dev

  - echo "fetch https://github.com/ClangBuiltLinux/tc-build"
  - git clone https://github.com/ClangBuiltLinux/tc-build
  - echo "fetch build srcipt"
  - wget -L https://raw.githubusercontent.com/wloot/tc-build/e4f9d22bf6f757b38406749666c59a3d03601c0a/build-tc.sh
  - echo "remove clang vendor name"
  - sed -i 's/--clang-vendor/#--clang-vendor/g' build-tc.sh
  - echo "remove additional link"
  - sed -i 's/--additional-build-arguments/#--additional-build-arguments/g' build-tc.sh

  - sed -i '15,16d' build-tc.sh
  #- sed -i 's/--update/#--update/g' build-tc.sh
  #- sed -i 's/--lto/#--lto/g' build-tc.sh

  - echo "use good revision"
  - sed -i '14 a\        --use-good-revision \\' build-tc.sh
  - sed -i 's/"installTmp" \\/"installTmp"/g' build-tc.sh

  - mv build-tc.sh tc-build
  - chmod +x tc-build/build-tc.sh

stages:
  - name: build
    if: tag IS present

jobs:
  # job parallel
  include:
    - stage: build
      script: 
      - cd tc-build
      - cmake --version
      - ./build-tc.sh

      after_success:
        - echo "build success"
        - cd ..

      before_deploy:
        - tar -zcvf $TRAVIS_TAG.tar.gz -C tc-build/install/

      deploy:
        skip_cleanup: true
        provider: releases
        token: $github_oauth_key
        on:
          tags: true
        file: 
          - $TRAVIS_TAG.tar.gz

      after_deploy:
        - echo "deploy success"
